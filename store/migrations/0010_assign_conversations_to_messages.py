# Generated by Django 4.2.20 on 2025-05-06 08:52

from django.db import migrations

def assign_conversations(apps, schema_editor):
    # Get the historical models
    Message = apps.get_model('store', 'Message')
    Conversation = apps.get_model('store', 'Conversation')
    User = apps.get_model('auth', 'User')
    
    # For each message without a conversation
    for message in Message.objects.filter(conversation__isnull=True):
        # Find or create a conversation between sender and recipient
        sender = message.sender
        recipient = message.recipient
        
        # Try to find existing conversation
        conversations = Conversation.objects.filter(participants=sender).filter(participants=recipient)
        
        if conversations.exists():
            conversation = conversations.first()
        else:
            # Create new conversation
            conversation = Conversation.objects.create()
            conversation.participants.add(sender, recipient)
            conversation.save()
        
        # Assign conversation to message
        message.conversation = conversation
        message.save()

class Migration(migrations.Migration):

    dependencies = [
        ('store', '0001_initial'),  # Replace with the actual previous migration
    ]

    operations = [
        migrations.RunPython(assign_conversations, migrations.RunPython.noop),
    ]
