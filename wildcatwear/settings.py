"""
Django settings for wildcatwear project.

Generated by 'django-admin startproject' using Django 4.2.19.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import os

from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Configure Django to use custom User model
AUTH_USER_MODEL = 'store.User'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-kc!dt%1xo3&))rv(3186n0y(^v(#&t(j-d0&*ichjfqql9b*0p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

SITE_URL = "http://127.0.0.1:8000"
SITE_NAME = "WildcatWear"

# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'store',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'store.auth_middleware.RoleMiddleware',  #  Our custom role middleware
    'store.auth_middleware.EmailVerificationMiddleware',  # Email verification middleware
    'store.admin_keywords_middleware.AdminKeywordsMiddleware'
]

# Cache Configuration
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

ROOT_URLCONF = 'wildcatwear.urls'

NOTIFICATION_SETTINGS = {
    'CHECK_INTERVAL': 30,  # Check for new notifications every 30 seconds
    'MAX_NOTIFICATIONS': 50,  # Maximum number of notifications to keep per user
}

CSRF_COOKIE_SECURE = True # True in production
CSRF_COOKIE_HTTPONLY = True # Makes CSRF cookie not accessible via JavaScript
CSRF_USE_SESSIONS = True  # Store CSRF token in the session instead of in a cookie
CSRF_COOKIE_SAMESITE = 'Lax'  # SameSite attribute

# Session Settings
SESSION_COOKIE_SECURE = True  # True in production
SESSION_COOKIE_HTTPONLY = True  # Makes session cookie not accessible via JavaScript
SESSION_COOKIE_SAMESITE = 'Lax'  # SameSite attribute
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Store sessions in database
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Session persists even after browser close
SESSION_COOKIE_AGE = 1209600  # 2 weeks in seconds

#Security headers
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_HSTS_SECONDS = 31536000  # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wildcatwear.wsgi.application'

# Allow localhost for development
CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:5500"
]

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME', 'wildcatwear_db'),
        'USER': os.environ.get('DB_USER', 'wildcatwear_user'),
        'PASSWORD': os.environ.get('DB_PASSWORD', 'judy2003'),
        'HOST': os.environ.get('DB_HOST', 'localhost'),
        'PORT': os.environ.get('DB_PORT', '5432'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

# Set up static and template paths

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') # Where collectstatic will save the files

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'